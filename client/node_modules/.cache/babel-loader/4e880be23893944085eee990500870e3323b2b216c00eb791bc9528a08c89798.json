{"ast":null,"code":"var _jsxFileName = \"/Users/aelysha/Desktop/INFO490/HuskyHive/huskyhive/client/src/Pages/Calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [calendarSrc, setCalendarSrc] = useState('');\n  const [showError, setShowError] = useState(false);\n\n  // Handle the Google Login callback\n  const handleLoginSuccess = response => {\n    const token = response.credential; // The ID token\n\n    // Send token to backend to verify\n    axios.post('/api/users/google-login', {\n      credential: token\n    }).then(res => {\n      const userEmail = res.data.email; // Get email from backend response\n      setEmail(userEmail);\n      setShowError(false);\n    }).catch(error => {\n      console.error('Error verifying token:', error);\n    });\n  };\n  const showCal = () => {\n    if (email && /.+\\@.+/.test(email)) {\n      setCalendarSrc(`https://calendar.google.com/calendar/embed?src=${encodeURIComponent(email)}`);\n      setShowError(false);\n    } else {\n      setShowError(true);\n      setCalendarSrc('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"854157406658-r39p4ihqe52uju7fu8bo2at3lu8j552m.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Embed Google Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLoginSuccess,\n        onError: error => console.error(\"Login Failed:\", error)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Logged in as: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showCal,\n        children: \"Show Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"That doesn't look like a valid email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), calendarSrc && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: calendarSrc,\n        width: \"800\",\n        height: \"600\",\n        frameBorder: \"0\",\n        title: \"Google Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"XOmY+3b8G6dhfWiFY5q21UoNl+s=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","axios","jsxDEV","_jsxDEV","Calendar","_s","email","setEmail","calendarSrc","setCalendarSrc","showError","setShowError","handleLoginSuccess","response","token","credential","post","then","res","userEmail","data","catch","error","console","showCal","test","encodeURIComponent","clientId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","onClick","style","color","src","width","height","frameBorder","title","_c","$RefreshReg$"],"sources":["/Users/aelysha/Desktop/INFO490/HuskyHive/huskyhive/client/src/Pages/Calendar/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\n\nfunction Calendar() {\n  const [email, setEmail] = useState('');\n  const [calendarSrc, setCalendarSrc] = useState('');\n  const [showError, setShowError] = useState(false);\n\n  // Handle the Google Login callback\n  const handleLoginSuccess = (response) => {\n    const token = response.credential; // The ID token\n\n    // Send token to backend to verify\n    axios.post('/api/users/google-login', { credential: token })\n      .then((res) => {\n        const userEmail = res.data.email;  // Get email from backend response\n        setEmail(userEmail);\n        setShowError(false);\n      })\n      .catch((error) => {\n        console.error('Error verifying token:', error);\n      });\n  };\n\n  const showCal = () => {\n    if (email && /.+\\@.+/.test(email)) {\n      setCalendarSrc(`https://calendar.google.com/calendar/embed?src=${encodeURIComponent(email)}`);\n      setShowError(false);\n    } else {\n      setShowError(true);\n      setCalendarSrc('');\n    }\n  };\n\n  return (\n    <GoogleOAuthProvider clientId=\"854157406658-r39p4ihqe52uju7fu8bo2at3lu8j552m.apps.googleusercontent.com\">\n      <div>\n        <h2>Embed Google Calendar</h2>\n\n        {/* Google Login Button */}\n        <GoogleLogin onSuccess={handleLoginSuccess} onError={(error) => console.error(\"Login Failed:\", error)} />\n\n        {email && <p>Logged in as: {email}</p>}\n        <button onClick={showCal}>Show Calendar</button>\n\n        {showError && <div style={{ color: 'red' }}>That doesn't look like a valid email...</div>}\n        \n        {calendarSrc && (\n          <iframe\n            src={calendarSrc}\n            width=\"800\"\n            height=\"600\"\n            frameBorder=\"0\"\n            title=\"Google Calendar\"\n          ></iframe>\n        )}\n      </div>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}